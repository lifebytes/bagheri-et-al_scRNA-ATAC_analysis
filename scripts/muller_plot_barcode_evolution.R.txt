##################print the arguments####################
args <- commandArgs(trailingOnly = TRUE)
print(args)
####args[1]<-metadata with pseudotime and other sample information used in the publication data
####args[2]<-output_file_prefix

### load the required packages ###
suppressMessages(library(ggplot2))
suppressMessages(library(reshape2))
suppressMessages(library(cowplot))
suppressMessages(library(MullerPlot))

############Input###############
meta<-args[1]
op <- args[2]

if(length(args)!=2){
    stop("Error: Number of input arguments are not compatible with muller_plot_barcode_evolution.R script")
    }
    
if(file.exists(raw_matrix)!=TRUE){
    stop(paste0("Error: ",meta," meta file does not exist"," :existing file is needed"))
    }


x <- read.csv(meta)

###############In our data: will be deleted once script is finalized
Gen_sam<-"Generic_Sample"
Rev_bar<-"Revised_Barcode_class_v2"
Pseudo<-"Pseudotime"
Treat1<-"ERI"
Treat2<-"PAC"
Unt<-"Untreated"
Bar1<-c("bc14-29-bc30-33048", "bc14-1-bc30-96229","bc14-71-bc30-88522","bc14-55-bc30-99383", "bc14-55-bc30-37135", "bc14-39-bc30-41529", "bc14-95-bc30-33662", "bc14-6-bc30-93034","bc14-76-bc30-49517","bc14-55-bc30-23349")
Bar2<-c("bc14-92-bc30-83570", "bc14-36-bc30-56638", "bc14-58-bc30-9763", "bc14-29-bc30-33048", "bc14-65-bc30-62538", "bc14-33-bc30-33994", "bc14-18-bc30-67263", "bc14-6-bc30-93034", "bc14-4-bc30-67693", "bc14-76-bc30-49517")


# Gen_sam<-“Explore the Integrated_data and mention the generic sample column name”
# Rev_bar<-“Explore the Integrated_data and mention the revised barcode class column name”
# Pseudo<-“Explore the Integrated_data and mention the pseudotime column name”
# Treat1<-“ Explore the Integrated_data and mention the first treatment name”
# Treat2<-“ Explore the Integrated_data and mention the Second treatment name”
# Unt<-“ Explore the Integrated_data and mention the untreated name”
# Bar1<-“vector(“Interested barcodes corresponding to treatment 1 and untreated sample”)”
# Bar2<-“vector(“Interested barcodes corresponding to treatment 2 and untreated sample”)”

###date
abc<-format(Sys.Date(), format = "%d_%B_%Y")

Idents(x) <- Rev_bar

###############Preparing the data which is suitable for muller plot###################
meta <- meta[,c(Gen_sam,Rev_bar,Pseudo)]
meta$Pt <- cut(meta[,Pseudo], breaks = seq(0, round(round(max(meta[,Pseudo]),1)),1), label = seq(1, round(round(max(meta[,Pseudo]),1)),1))

meta_Treat1_Unt   <- meta[meta[,Rev_bar] %in% Bar1 & meta[,Gen_sam] %in% c(grep(Treat1,levels(as.factor(meta[,Gen_sam])),value=T), grep(Unt,levels(as.factor(meta[,Gen_sam])),value=T)),]

meta_Treat2_Unt   <- meta[meta[,Rev_bar] %in% Bar2 & meta[,Gen_sam] %in% c(grep(Treat2,levels(as.factor(meta[,Gen_sam])),value=T), grep(Unt,levels(as.factor(meta[,Gen_sam])),value=T)),]


freq_table_Treat1_Unt <- as.data.frame.matrix(table(meta_Treat1_Unt[,Rev_bar],meta_Treat1_Unt[,"Pt"]))
########To show the frequencies of 0 in plot, 0’s are converted to 0.001
freq_table_Treat1_Unt[freq_table_Treat1_Unt == 0] <- 0.001 


Attributes_Treat1_Unt <- as.matrix(data.frame(names = rownames(freq_table_Treat1_Unt), parents = rep(NA, length(rownames(freq_table_Treat1_Unt))), colors = rainbow(10)))

freq_table_Unt_Treat2 <- as.data.frame.matrix(table(meta_Treat2_Unt [,Rev_bar],meta_Treat2_Unt[,"Pt"]))
freq_table_Unt_Treat2[freq_table_Unt_Treat2== 0] <- 0.001

Attributes_Unt_Treat2 <- as.matrix(data.frame(names = rownames(freq_table_Unt_Treat2), parents = rep(NA, length(rownames(freq_table_Unt_Treat2))), colors = rainbow(10)))


freq_table_Treat1_Unt_den<-meta_Treat1_Unt[,c(1,4)]  
freq_table_Treat1_Unt_fre<-as.data.frame.matrix(table(freq_table_Treat1_Unt_den[,"Pt"],freq_table_Treat1_Unt_den[,Gen_sam]))
freq_table_Treat1_Unt_fre$Pt<-row.names(freq_table_Treat1_Unt_fre)

freq_table_Unt_Treat2_den <- meta_Treat2_Unt[,c(1,4)]
freq_table_Unt_Treat2_fre<-as.data.frame.matrix(table(freq_table_Unt_Treat2_den[,"Pt"],freq_table_Unt_Treat2_den[,Gen_sam]))
freq_table_Unt_Treat2_fre$Pt<-row.names(freq_table_Unt_Treat2_fre)

###########save the needed file for muller plot preparation#################
write.csv(freq_table_Treat1_Unt, file = paste0(args[2],"freq_table_ERI_Unt_",abc,".csv"))
write.csv(freq_table_Unt_Treat2, file = paste0(args[2],"freq_table_Unt_",abc,".csv"))

                     
############################Muller plot corrections###############               
png(paste0(op,"_muller_plot_",abc,".png"), width=5500, height=1800, res = 300)
par(mfrow=c(4,2),mar=c(4,4,2,4))
######Specify the location of each section in plot############
layout(matrix(c(1,3,5,7,2,4,6,8), nrow=2,ncol=4, byrow = FALSE),heights=c(0.6,1),widths=c(0.35,0.35,0.15,0.15))

##############line diagram#################
p1<-plot(x=freq_table_Treat1_Unt_fre$Pt,y=freq_table_Treat1_Unt_fre[,grep(Unt,levels(as.factor(meta[,Gen_sam])),value=T)],type="l",col="green",xlab="",ylab="Frequency",ylim=c(0,max(freq_table_Treat1_Unt_fre[,colnames(freq_table_Treat1_Unt_fre)[4]])),main=paste0("Untreated and ",Treat1),font.main=2,font.lab=4,lwd=2,las=1, , xaxs="i")
lines(x=freq_table_Treat1_Unt_fre$Pt,y=freq_table_Treat1_Unt_fre[,1],type="l",col="darkred",lwd=2)
lines(x=freq_table_Treat1_Unt_fre$Pt,y=freq_table_Treat1_Unt_fre[,2],type="l",col="blue",lwd=2)
lines(x=freq_table_Treat1_Unt_fre$Pt,y=freq_table_Treat1_Unt_fre[,3],type="l",col="darkorange",lwd=2)
lines(x=freq_table_Treat1_Unt_fre$Pt,y=freq_table_Treat1_Unt_fre[,4],type="l",col="purple",lwd=2)

plot(3, type = "n", axes=FALSE, xlab="", ylab="")
legend(x = "center",inset = 0,
        legend = c(grep(Unt,levels(as.factor(meta[,Gen_sam])),value=T),grep(Treat1,levels(as.factor(meta[,Gen_sam])),value=T)),
        col=c("green", "darkred", "blue", "darkorange", "purple"),
         horiz = FALSE,
         pch = 16,
         cex = 1.1,
         box.lty = 0,
         title = "Samples")


m.plot1 <- Muller.plot(attributes = Attributes_Treat1_Unt,
                      population.data = freq_table_Treat1_Unt,
                      data.method = "table",
                      time.interval.method = "equal",
                      cex.axis = 1,
                      xlab = Pseudo,
                      ylab = "Relative Frequency",
                      font.lab=4
                      , xaxs="i"
                      )

plot(1, type = "n", axes=FALSE, xlab="", ylab="")
plot_colors_1 <- as.character(Attributes_Treat1_Unt[,3])
legend(x = "left",inset = 0,
        legend = Attributes_Treat1_Unt[,1], 
        col=plot_colors_1,
         horiz = FALSE,
         pch = 16,
         cex = 1.1,
         box.lty = 0,
         title = "Barcodes")

plot(x=freq_table_Unt_Treat2_fre$Pt,y=freq_table_Unt_Treat2_fre[,grep(Unt,levels(as.factor(meta[,Gen_sam])),value=T)],type="l",col="green",xlab="",ylab="Frequency",ylim=c(-3,max(freq_table_Unt_Treat2_fre[,colnames(freq_table_Unt_Treat2_fre)[3]])),main=paste0("Untreated and ",Treat2),font.main=2,font.lab=4,lwd=2,las=1, xaxs="i")
lines(x=freq_table_Unt_Treat2_fre$Pt,y=freq_table_Unt_Treat2_fre[,1],type="l",col="darkred",lwd=2)
lines(x=freq_table_Unt_Treat2_fre$Pt,y=freq_table_Unt_Treat2_fre[,2],type="l",col="blue",lwd=2)
lines(x=freq_table_Unt_Treat2_fre$Pt,y=freq_table_Unt_Treat2_fre[,3],type="l",col="darkorange",lwd=2)

plot(4, type = "n", axes=FALSE, xlab="", ylab="")
legend(x = "center",inset = 0,
        legend = c(grep(Unt,levels(as.factor(meta[,Gen_sam])),value=T),grep(Treat2,levels(as.factor(meta[,Gen_sam])),value=T)), 
        col=c("green", "darkred", "blue", "darkorange"),
         horiz = FALSE,
         pch = 16,
         cex = 1.1,
         box.lty = 0,
         title = "Samples")

					  				  
m.plot2<-Muller.plot(attributes = Attributes_Unt_Treat2,
                      population.data = freq_table_Unt_Treat2,
                      data.method = "table",
                      time.interval.method = "equal",
                      cex.axis = 1,
                      xlab = Pseudo,
                      ylab = "Relative Frequency",
                      font.lab=4
                      , xaxs="i")
                      
plot(2, type = "n", axes=FALSE, xlab="", ylab="")
plot_colors_2 <- as.character(Attributes_Unt_Treat2[,3])
legend(x = "left",inset = 0,
        legend = Attributes_Unt_Treat2[,1], 
        col=plot_colors_2,
         horiz = FALSE,
         pch = 16,
         cex = 1.1,
         box.lty = 0,
         title = "Barcodes")
        
dev.off()
